# Generated by Django 5.1 on 2024-08-13 13:35

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Plot',
            fields=[
                ('plot_number', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('plot_owner', models.CharField(default='Nyumba Kumi', max_length=100)),
                ('plot_name', models.CharField(default='Nyumba Kumi', max_length=100)),
                ('plot_location', models.CharField(max_length=200)),
                ('plot_address', models.CharField(default='Kiganjo', max_length=200)),
                ('plot_map', models.CharField(blank=True, max_length=200, null=True)),
                ('plot_status', models.CharField(default='Vaccant', max_length=100)),
                ('plot_price', models.PositiveIntegerField(default='4000')),
                ('plot_price_description', models.CharField(blank=True, max_length=200, null=True)),
                ('plot_single', models.BooleanField(default=False, verbose_name='Single')),
                ('plot_bedsitter', models.BooleanField(default=False, verbose_name='Bedsitter')),
                ('plot_1B', models.BooleanField(default=False, verbose_name='1 Bedroom')),
                ('plot_2B', models.BooleanField(default=False, verbose_name='2 Bedroom')),
                ('plot_3B', models.BooleanField(default=False, verbose_name='3 Bedroom')),
                ('plot_type', models.CharField(choices=[('single_storey', 'Single Storey'), ('multi_storey', 'Multi Storey')], default='single_storey', max_length=100)),
                ('plot_electricity', models.CharField(default='Token', max_length=100)),
                ('plot_water', models.CharField(default='150 @ M', max_length=100)),
                ('plot_garbage', models.CharField(default='100 @ month', max_length=100)),
                ('plot_security', models.CharField(default='Gate', max_length=100)),
                ('plot_rating', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(5)])),
                ('plot_bg_pic', models.URLField(blank=True, null=True)),
                ('plot_upload_date', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'ordering': ['-plot_number'],
            },
        ),
        migrations.CreateModel(
            name='PlotOccupant',
            fields=[
                ('plot_occupant_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('plot_occupant_f_name', models.CharField(default='Caretaker', max_length=100)),
                ('plot_occupant_l_name', models.CharField(blank=True, max_length=100, null=True)),
                ('plot_occupant_class', models.CharField(choices=[('caretaker', 'Caretaker'), ('resident', 'Resident')], default='caretaker', max_length=100)),
                ('plot_occupant_phone', models.CharField(max_length=20, unique=True, validators=[django.core.validators.MinLengthValidator(10, message='Phone number must be at least 10 characters long.')])),
                ('plot_occupant_email', models.EmailField(blank=True, max_length=100, null=True)),
                ('plot_number', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='plots.plot')),
            ],
            options={
                'ordering': ['plot_number', 'plot_occupant_f_name'],
            },
        ),
        migrations.CreateModel(
            name='PlotPic',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('plot_pic', models.URLField()),
                ('plot_pic_desc', models.CharField(blank=True, max_length=200, null=True)),
                ('plot_number', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='plots.plot')),
            ],
            options={
                'ordering': ['plot_number', 'plot_pic_desc'],
            },
        ),
    ]
